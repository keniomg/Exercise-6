using System;
using System.Collections.Generic;

namespace oopTask4
{
    internal class Program
    {
        static void Main(string[] args)
        {
            const string TakeCardFromDeckCommand = "1";
            const string ShowCardsInHandCommand = "2";
            const string FinishDrawingCardsCommand = "3";
            const string MixCardsInDeckCommand = "4";
            const string ShowCardsInDeckCommand = "5";

            Deck cardList = new Deck();
            Player player = new Player();
            bool isWorking = true;

            while (isWorking)
            {
                Console.WriteLine($"Вы можете выполнить одну из следующих команд:\n" +
                    $"{TakeCardFromDeckCommand} - взять карту из колоды\n" +
                    $"{ShowCardsInHandCommand} - показать карты в вашей руке\n" +
                    $"{FinishDrawingCardsCommand} - закончить набор карт\n" +
                    $"{MixCardsInDeckCommand} - перемешать карты в колоде\n" +
                    $"{ShowCardsInDeckCommand} - показать карты в колоде\n");
                string userInput = Console.ReadLine();
                Console.Clear();
                
                switch (userInput)
                {
                    case TakeCardFromDeckCommand:
                        player.TakeCard(cardList.GiveCard());
                        break;

                    case ShowCardsInHandCommand:
                        player.ShowCardsInHand();
                        break;

                    case FinishDrawingCardsCommand:
                        player.FinishDrawingCards(out isWorking);
                        break;

                    case MixCardsInDeckCommand:
                        cardList.MixCards(player);
                        break;

                    case ShowCardsInDeckCommand:
                        cardList.ShowCards(player);
                        break;

                    default:
                        player.WriteWrongInputMessage();
                        break;

                }
                
                Console.Clear();
            }
        }
    }

    public class Card
    {
        public Card(string suit, string value)
        {
            Suit = suit;
            Value = value;
        }

        public string Suit { get; private set; }
        public string Value { get; private set; }
    }

    public class Deck
    {
        Random random = new Random();

        private List<Card> _cards = new List<Card> { new Card("Черви", "6"), new Card("Черви", "7"), new Card("Черви", "8"), new Card("Черви", "9"), 
            new Card("Черви", "10"), new Card("Черви", "Валет"), new Card("Черви", "Дама"), new Card("Черви", "Король"), new Card("Черви", "Туз"), new Card("Буби", "6"), 
            new Card("Буби", "7"), new Card("Буби", "8"), new Card("Буби", "9"), new Card("Буби", "10"), new Card("Буби", "Валет"), new Card("Буби", "Дама"), 
            new Card("Буби", "Король"), new Card("Буби", "Туз"), new Card("Крести", "6"), new Card("Крести", "7"), new Card("Крести", "8"), new Card("Крести", "9"), 
            new Card("Крести", "10"), new Card("Крести", "Валет"), new Card("Крести", "Дама"), new Card("Крести", "Король"), new Card("Крести", "Туз"), 
            new Card("Пики", "6"), new Card("Пики", "7"), new Card("Пики", "8"), new Card("Пики", "9"), new Card("Пики", "10"), new Card("Пики", "Валет"), 
            new Card("Пики", "Дама"), new Card("Пики", "Король"), new Card("Пики", "Туз") };

        public void ShowCards(Player player)
        {
            for (int i = 0; i < _cards.Count; i++)
                Console.WriteLine($"{_cards[i].Suit}, {_cards[i].Value}\n");

            player.WritePressAnyKeyForContinueMessage();
        }

        public Card GiveCard()
        {
            int randomCardIndex = random.Next(0, _cards.Count);
            Card takenCard = _cards[randomCardIndex];
            _cards.Remove(takenCard);
            return takenCard;
        }

        public void MixCards(Player player)
        {
            for (int i = _cards.Count - 1; i >= 1; i--)
            {
                int j = random.Next(i + 1);
                (_cards[i], _cards[j]) = (_cards[j], _cards[i]);
            }

            Console.WriteLine("Карты перемешаны");
            player.WritePressAnyKeyForContinueMessage();
        }
    }

    public class Player
    {
        private List<Card> _cardsInHand = new List<Card>();

        public void TakeCard(Card card)
        {
            int maxCardsInHandCount = 3;

            if (_cardsInHand.Count < maxCardsInHandCount)
            {
                _cardsInHand.Add(card);
                Console.WriteLine($"Вы взяли из колоды карту, теперь в вашей руке карт: {_cardsInHand.Count}.");
            }
            else
            {
                Console.WriteLine("В вашей руке уже достаточно карт.");
            }

            WritePressAnyKeyForContinueMessage();
        }

        public void ShowCardsInHand()
        {
            if (_cardsInHand.Count > 0)
            {
                for (int i = 0; i < _cardsInHand.Count; i++)
                    Console.WriteLine($"{_cardsInHand[i].Suit}, {_cardsInHand[i].Value}\n");
            }
            else
            {
                Console.WriteLine("В вашей руке нет ни одной карты");
            }

            WritePressAnyKeyForContinueMessage();
        }

        public void FinishDrawingCards(out bool isWorking)
        {
            Console.WriteLine("Вы закончили набор карт. В вашей руке следующие карты:\n");
            ShowCardsInHand();
            isWorking = false;
        }

        public void WriteWrongInputMessage()
        {
            Console.WriteLine("Введеная неверная команда");
            WritePressAnyKeyForContinueMessage();
        }

        public void WritePressAnyKeyForContinueMessage()
        {
            Console.WriteLine("\nНажмите любую клавишу, чтобы продолжить...");
            Console.ReadKey();
        }
    }
}
