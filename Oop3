using System;
using System.Collections.Generic;

namespace oopTask3
{
    internal class Program
    {
        static void Main(string[] args)
        {
            const string ShowInfoCommand = "1";
            const string BanPlayerCommand = "2";
            const string UnbanPlayerCommand = "3";
            const string DeletePlayerCommand = "4";
            const string AddPlayerCommand = "5";

            List<Player> players = new List<Player> { new Player(1230, 14, "lox", false), new Player(4321, 22, "sas", false), new Player() };
            DataBase playerList = new DataBase(players);
            bool isOpen = true;
            string userInput = null;

            while (isOpen)
            {
                Console.Clear();
                Console.WriteLine($"{ShowInfoCommand} - показать информацию об игроках" +
                    $"\n{BanPlayerCommand} - забанить игрока\n{UnbanPlayerCommand} - разбанить игрока" +
                    $"\n{DeletePlayerCommand} - удалить игрока\n{AddPlayerCommand} - добавить игрока\n");
                userInput = Console.ReadLine();
                Console.Clear();

                switch (userInput)
                {
                    case ShowInfoCommand:
                        playerList.ShowInfo();
                        break;

                    case BanPlayerCommand:
                        playerList.Ban();
                        break;

                    case UnbanPlayerCommand:
                        playerList.Unban();
                        break;

                    case DeletePlayerCommand:
                        playerList.DeletePlayer();
                        break;

                    case AddPlayerCommand:
                        playerList.AddPlayer();
                        break;

                    default:
                        Console.WriteLine("Команда введена неверно");
                        break;
                }

                Console.WriteLine("\nДля продолжения, нажмите любую клавишу...\n");
                Console.ReadKey();
            }
        }
    }

    public class Player
    {
        public Player()
        {
            Id = 1234;
            Level = 1;
            Name = "Nameless";
            IsBanned = false;
        }

        public Player(int id, int level, string name, bool isBanned)
        {
            Id = id;
            Level = level;
            Name = name;
            IsBanned = isBanned;
        }

        public int Id { get; private set; }
        public int Level { get; private set; }
        public string Name { get; private set; }
        public bool IsBanned { get; private set; }

        public void ShowInfo()
        {
            Console.WriteLine($"ID - {Id}\nLevel - {Level}\nName - {Name}\nIs Banned - {IsBanned}");
        }

        public void Ban()
        {
            IsBanned = true;
        }

        public void Unban()
        {
            IsBanned = false;
        }
    }

    public class DataBase
    {
        public DataBase(List<Player> players)
        {
            _players = players;
        }

        private List<Player> _players = new List<Player>();

        public void ShowInfo()
        {
            for (int i = 0; i < _players.Count; i++)
            {
                _players[i].ShowInfo();
                Console.WriteLine();
            }
        }

        public void Ban()
        {
            int id = 0;
            Console.WriteLine("Введите id игрока\n");
            string userInput = Console.ReadLine();
            bool isBanSuccessful = false;

            if (int.TryParse(userInput, out id) == false)
            {
                Console.Clear();
                Console.WriteLine("ID игрока введён неверно");
            }
            else
            {
                for (int i = 0; i < _players.Count; i++)
                {
                    if (_players[i].Id == id)
                    {
                        if (_players[i].IsBanned == false)
                        {
                            _players[i].Ban();
                            isBanSuccessful = true;
                        }
                        else
                        {
                            Console.WriteLine($"\nИгрок с ID - {id} уже забанен");
                        }
                    
                        break;
                    }
                }

                if (isBanSuccessful)
                {
                    Console.WriteLine($"\nИгрок с ID - {id} забанен");
                }
                else
                {
                    Console.WriteLine($"\nНе удалось забанить игрока с ID - {id}");
                }
            }
        }

        public void Unban()
        {
            int id = 0;
            Console.WriteLine("Введите id игрока\n");
            string userInput = Console.ReadLine();
            bool isUnbanSuccessful = false;

            if (int.TryParse(userInput, out id) == false)
            {
                Console.Clear();
                Console.WriteLine("ID игрока введён неверно");
            }
            else
            {
                for (int i = 0; i < _players.Count; i++)
                {
                    if (_players[i].Id == id)
                    {
                        if (_players[i].IsBanned == true)
                        {
                            _players[i].Unban();
                            isUnbanSuccessful = true;
                        }
                        else
                        {
                            Console.WriteLine($"\nИгрок с ID - {id} не забанен");
                        }

                        break;
                    }
                }

                if (isUnbanSuccessful)
                {
                    Console.WriteLine($"\nИгрок с ID - {id} разбанен");
                }
                else
                {
                    Console.WriteLine($"\nНе удалось разбанить игрока с ID - {id}");
                }
            }
        }

        public void DeletePlayer()
        {
            int id = 0;
            Console.WriteLine("Введите id игрока\n");
            string userInput = Console.ReadLine();
            bool isDeleteSuccessful = false;

            if (int.TryParse(userInput, out id) == false)
            {
                Console.Clear();
                Console.WriteLine("ID игрока введён неверно");
            }
            else
            {
                for (int i = 0; i < _players.Count; i++)
                {
                    if (_players[i].Id == id)
                    {
                        _players.RemoveAt(i);
                        isDeleteSuccessful = true;
                        break;
                    }
                }

                if (isDeleteSuccessful)
                {
                    Console.WriteLine($"\nИгрок с ID - {id} удалён");
                }
                else
                {
                    Console.WriteLine($"\nНе удалось удалить игрока с ID - {id}");
                }
            }
        }

        public void AddPlayer()
        {
            int id = 0;
            string name = null;
            int level = 0;
            bool isAddSuccessful = true;
            Console.WriteLine("Введите id игрока\n");
            string userInput = Console.ReadLine();

            if (int.TryParse(userInput, out id) == false)
            {
                Console.Clear();
                Console.WriteLine("ID игрока введён неверно");
                isAddSuccessful = false;
            }
            else
            {
                for (int i = 0; i < _players.Count; i++)
                {
                    if (_players[i].Id == id)
                    {
                        Console.WriteLine("\nИгрок с таким ID уже есть");
                        isAddSuccessful = false;
                        break;
                    }
                }
            }

            if (isAddSuccessful)
            {
                Console.Clear();
                Console.WriteLine("Введите уровень игрока\n");
                userInput = Console.ReadLine();

                if (int.TryParse(userInput, out level) == false)
                {
                    Console.Clear();
                    Console.WriteLine("Уровень игрока введён неверно");
                    isAddSuccessful = false;
                }
            }

            if (isAddSuccessful)
            {
                Console.Clear();
                Console.WriteLine("Введите имя игрока\n");
                name = Console.ReadLine();

                for (int i = 0; i < _players.Count; i++)
                {
                    if (_players[i].Name == name)
                    {
                        Console.WriteLine("\nИгрок с таким именем уже есть");
                        isAddSuccessful = false;
                        break;
                    }
                }
            }

            if (isAddSuccessful)
            {
                _players.Add(new Player(id, level, name, false));
                Console.WriteLine($"\nИгрок добавлен");
            }
            else
            {
                Console.WriteLine($"\nНе удалось добавить игрока");
            }
        }
    }
}
